services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-sca}
      POSTGRES_USER: ${DB_USER:-sca}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-sca}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-sca} -d ${DB_NAME:-sca}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file: .env
    command: >
      sh -c "python manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    environment:
      GUNICORN_CMD_ARGS: "--workers 2 --threads 4 --timeout 60 --graceful-timeout 30 --keep-alive 5 --access-logfile - --error-logfile -"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "python", "-c", "import socket,sys; s=socket.socket(); s.settimeout(2); s.connect(('127.0.0.1',8000)); s.close(); sys.exit(0)"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    restart: unless-stopped

volumes:
  pgdata:
